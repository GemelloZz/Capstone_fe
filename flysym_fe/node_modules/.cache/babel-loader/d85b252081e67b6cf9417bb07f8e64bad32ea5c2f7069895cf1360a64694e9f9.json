{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\l-gab\\\\OneDrive\\\\Desktop\\\\CAPSTONE_UTENZE_TELEFONICHE\\\\flysym_fe\\\\src\\\\Component\\\\Registrati.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Registrati = ({\n  username,\n  setUsername,\n  password,\n  setPassword\n}) => {\n  _s();\n  const [error, setError] = useState(null); // Stato per gestire errori\n  const [loading, setLoading] = useState(false); // Stato per gestire lo stato di caricamento\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    // Verifica se username e password non sono vuoti\n    if (!username || !password) {\n      setError(\"Username e password sono obbligatori.\");\n      return;\n    }\n    setLoading(true); // Impostiamo lo stato di caricamento\n\n    try {\n      const response = await fetch(\"http://localhost:8000/api/auth/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (!response.ok) {\n        // Se la risposta non è positiva, lancia un errore\n        throw new Error(\"Errore nella registrazione, riprova.\");\n      }\n      const data = await response.json();\n      console.log(\"Registrazione avvenuta con successo\", data);\n      // Qui puoi fare altre operazioni, ad esempio redirect o aggiornare lo stato\n      setUsername(\"\");\n      setPassword(\"\");\n    } catch (error) {\n      setError(error.message); // Impostiamo il messaggio di errore se qualcosa va storto\n    } finally {\n      setLoading(false); // Disattiviamo lo stato di caricamento\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Registrati\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? \"Registrazione in corso...\" : \"Registrati\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Registrati, \"rEc7l+pXbieyWSk0M8PP+QokfWo=\");\n_c = Registrati;\nexport default Registrati;\nvar _c;\n$RefreshReg$(_c, \"Registrati\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Registrati","username","setUsername","password","setPassword","_s","error","setError","loading","setLoading","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","console","log","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","e","target","disabled","style","color","_c","$RefreshReg$"],"sources":["C:/Users/l-gab/OneDrive/Desktop/CAPSTONE_UTENZE_TELEFONICHE/flysym_fe/src/Component/Registrati.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Registrati = ({ username, setUsername, password, setPassword }) => {\r\n  const [error, setError] = useState(null); // Stato per gestire errori\r\n  const [loading, setLoading] = useState(false); // Stato per gestire lo stato di caricamento\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // Verifica se username e password non sono vuoti\r\n    if (!username || !password) {\r\n      setError(\"Username e password sono obbligatori.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true); // Impostiamo lo stato di caricamento\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:8000/api/auth/register\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          username,\r\n          password,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        // Se la risposta non è positiva, lancia un errore\r\n        throw new Error(\"Errore nella registrazione, riprova.\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log(\"Registrazione avvenuta con successo\", data);\r\n      // Qui puoi fare altre operazioni, ad esempio redirect o aggiornare lo stato\r\n      setUsername(\"\");\r\n      setPassword(\"\");\r\n    } catch (error) {\r\n      setError(error.message); // Impostiamo il messaggio di errore se qualcosa va storto\r\n    } finally {\r\n      setLoading(false); // Disattiviamo lo stato di caricamento\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Registrati</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"username\">Username:</label>\r\n          <input type=\"text\" id=\"username\" value={username} onChange={(e) => setUsername(e.target.value)} />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"password\">Password:</label>\r\n          <input type=\"password\" id=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n        </div>\r\n\r\n        <button type=\"submit\" disabled={loading}>\r\n          {loading ? \"Registrazione in corso...\" : \"Registrati\"}\r\n        </button>\r\n      </form>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>} {/* Visualizza messaggi di errore */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Registrati;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}