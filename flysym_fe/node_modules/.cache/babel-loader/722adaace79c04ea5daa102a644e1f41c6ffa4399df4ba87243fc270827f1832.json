{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\l-gab\\\\OneDrive\\\\Desktop\\\\EPICODE\\\\Capstone\\\\flysym_fe\\\\src\\\\Component\\\\AdminPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPage = () => {\n  _s();\n  const [promozioni, setPromozioni] = useState([]);\n  const [newPromozione, setNewPromozione] = useState(\"\");\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  // Funzione per verificare se l'utente è admin (tramite un token JWT)\n  useEffect(() => {\n    const authToken = localStorage.getItem(\"authToken\");\n    if (authToken) {\n      // Decodifica del token\n      const decodedToken = JSON.parse(atob(authToken.split(\".\")[1])); // Decodifica il token\n      const roles = decodedToken.roles; // Recupera i ruoli dal token\n      if (roles && roles.includes(\"ROLE_ADMIN\")) {\n        setIsAdmin(true);\n        fetchPromozioni(); // Se è admin, carica le promozioni\n      } else {\n        setIsAdmin(false); // Se non è admin, disabilita l'accesso\n      }\n    } else {\n      setIsAdmin(false); // Se non è autenticato, disabilita l'accesso\n    }\n    setLoading(false); // Impostiamo loading su false una volta completato il controllo\n  }, []);\n\n  // Funzione per recuperare le promozioni dal backend\n  const fetchPromozioni = async () => {\n    try {\n      const response = await axios.get(\"/api/admin/promozioni\");\n      setPromozioni(response.data);\n    } catch (error) {\n      console.error(\"Errore nel recupero delle promozioni:\", error);\n    }\n  };\n\n  // Funzione per aggiungere una nuova promozione\n  const addPromozione = async () => {\n    try {\n      await axios.post(\"/api/admin/promozioni/add\", {\n        promozione: newPromozione\n      });\n      setNewPromozione(\"\");\n      fetchPromozioni(); // Ricarica le promozioni dopo l'aggiunta\n    } catch (error) {\n      console.error(\"Errore nell'aggiungere la promozione:\", error);\n    }\n  };\n\n  // Funzione per aggiornare una promozione\n  const updatePromozione = async id => {\n    const updatedPromozione = prompt(\"Nuovo nome della promozione:\");\n    if (updatedPromozione) {\n      try {\n        await axios.put(`/api/admin/promozioni/update/${id}`, {\n          promozione: updatedPromozione\n        });\n        fetchPromozioni(); // Ricarica le promozioni dopo l'aggiornamento\n      } catch (error) {\n        console.error(\"Errore nell'aggiornare la promozione:\", error);\n      }\n    }\n  };\n\n  // Funzione per eliminare una promozione\n  const deletePromozione = async id => {\n    const confirmDelete = window.confirm(\"Sei sicuro di voler eliminare questa promozione?\");\n    if (confirmDelete) {\n      try {\n        await axios.delete(`/api/admin/promozioni/delete/${id}`);\n        fetchPromozioni(); // Ricarica le promozioni dopo l'eliminazione\n      } catch (error) {\n        console.error(\"Errore nell'eliminare la promozione:\", error);\n      }\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isAdmin ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Gestione Promozioni\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newPromozione,\n          onChange: e => setNewPromozione(e.target.value),\n          placeholder: \"Nuova promozione\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addPromozione,\n          children: \"Aggiungi Promozione\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: promozioni.map(promozione => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [promozione.name, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => updatePromozione(promozione.id),\n            children: \"Modifica\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deletePromozione(promozione.id),\n            children: \"Elimina\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this)]\n        }, promozione.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Accesso non autorizzato\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Solo gli amministratori possono gestire le promozioni.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPage, \"JUCS+Czieb2eu+bAm96h+HCdwsY=\");\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","AdminPage","_s","promozioni","setPromozioni","newPromozione","setNewPromozione","isAdmin","setIsAdmin","loading","setLoading","authToken","localStorage","getItem","decodedToken","JSON","parse","atob","split","roles","includes","fetchPromozioni","response","get","data","error","console","addPromozione","post","promozione","updatePromozione","id","updatedPromozione","prompt","put","deletePromozione","confirmDelete","window","confirm","delete","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","name","_c","$RefreshReg$"],"sources":["C:/Users/l-gab/OneDrive/Desktop/EPICODE/Capstone/flysym_fe/src/Component/AdminPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst AdminPage = () => {\r\n  const [promozioni, setPromozioni] = useState([]);\r\n  const [newPromozione, setNewPromozione] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Funzione per verificare se l'utente è admin (tramite un token JWT)\r\n  useEffect(() => {\r\n    const authToken = localStorage.getItem(\"authToken\");\r\n    if (authToken) {\r\n      // Decodifica del token\r\n      const decodedToken = JSON.parse(atob(authToken.split(\".\")[1])); // Decodifica il token\r\n      const roles = decodedToken.roles; // Recupera i ruoli dal token\r\n      if (roles && roles.includes(\"ROLE_ADMIN\")) {\r\n        setIsAdmin(true);\r\n        fetchPromozioni(); // Se è admin, carica le promozioni\r\n      } else {\r\n        setIsAdmin(false); // Se non è admin, disabilita l'accesso\r\n      }\r\n    } else {\r\n      setIsAdmin(false); // Se non è autenticato, disabilita l'accesso\r\n    }\r\n    setLoading(false); // Impostiamo loading su false una volta completato il controllo\r\n  }, []);\r\n\r\n  // Funzione per recuperare le promozioni dal backend\r\n  const fetchPromozioni = async () => {\r\n    try {\r\n      const response = await axios.get(\"/api/admin/promozioni\");\r\n      setPromozioni(response.data);\r\n    } catch (error) {\r\n      console.error(\"Errore nel recupero delle promozioni:\", error);\r\n    }\r\n  };\r\n\r\n  // Funzione per aggiungere una nuova promozione\r\n  const addPromozione = async () => {\r\n    try {\r\n      await axios.post(\"/api/admin/promozioni/add\", {\r\n        promozione: newPromozione,\r\n      });\r\n      setNewPromozione(\"\");\r\n      fetchPromozioni(); // Ricarica le promozioni dopo l'aggiunta\r\n    } catch (error) {\r\n      console.error(\"Errore nell'aggiungere la promozione:\", error);\r\n    }\r\n  };\r\n\r\n  // Funzione per aggiornare una promozione\r\n  const updatePromozione = async (id) => {\r\n    const updatedPromozione = prompt(\"Nuovo nome della promozione:\");\r\n    if (updatedPromozione) {\r\n      try {\r\n        await axios.put(`/api/admin/promozioni/update/${id}`, {\r\n          promozione: updatedPromozione,\r\n        });\r\n        fetchPromozioni(); // Ricarica le promozioni dopo l'aggiornamento\r\n      } catch (error) {\r\n        console.error(\"Errore nell'aggiornare la promozione:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Funzione per eliminare una promozione\r\n  const deletePromozione = async (id) => {\r\n    const confirmDelete = window.confirm(\"Sei sicuro di voler eliminare questa promozione?\");\r\n    if (confirmDelete) {\r\n      try {\r\n        await axios.delete(`/api/admin/promozioni/delete/${id}`);\r\n        fetchPromozioni(); // Ricarica le promozioni dopo l'eliminazione\r\n      } catch (error) {\r\n        console.error(\"Errore nell'eliminare la promozione:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n\r\n  return (\r\n    <div>\r\n      {isAdmin ? (\r\n        <div>\r\n          <h2>Gestione Promozioni</h2>\r\n\r\n          {/* Aggiungi Promozione */}\r\n          <div>\r\n            <input type=\"text\" value={newPromozione} onChange={(e) => setNewPromozione(e.target.value)} placeholder=\"Nuova promozione\" />\r\n            <button onClick={addPromozione}>Aggiungi Promozione</button>\r\n          </div>\r\n\r\n          {/* Visualizza tutte le promozioni */}\r\n          <ul>\r\n            {promozioni.map((promozione) => (\r\n              <li key={promozione.id}>\r\n                {promozione.name}\r\n                <button onClick={() => updatePromozione(promozione.id)}>Modifica</button>\r\n                <button onClick={() => deletePromozione(promozione.id)}>Elimina</button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <h2>Accesso non autorizzato</h2>\r\n          <p>Solo gli amministratori possono gestire le promozioni.</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}