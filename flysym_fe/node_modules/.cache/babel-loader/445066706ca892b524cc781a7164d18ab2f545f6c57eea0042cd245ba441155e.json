{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\l-gab\\\\OneDrive\\\\Desktop\\\\EPICODE\\\\Capstone\\\\flysym_fe\\\\src\\\\Component\\\\ChatBot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Button, ListGroup, Form, InputGroup, Overlay, Popover } from \"react-bootstrap\";\nimport { FaComment, FaTimes, FaPaperPlane } from \"react-icons/fa\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatPopup = () => {\n  _s();\n  const navigate = useNavigate();\n  const [showChat, setShowChat] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [currentOptions, setCurrentOptions] = useState([]);\n  const target = useRef(null);\n  const messagesEndRef = useRef(null);\n\n  // Database delle risposte con navigazione\n  const chatResponses = {\n    initial: {\n      text: \"Ciao! Sono il tuo assistente virtuale. Seleziona un'opzione e verrai reindirizzato alla pagina richiesta:\",\n      options: [\"1. Promozioni\", \"2. Promozioni Linea Fissa\", \"3. Telefoni\"]\n    },\n    1: {\n      text: \"Ti sto reindirizzando alle Promozioni...\",\n      action: () => navigate(\"/promozioni\"),\n      options: []\n    },\n    2: {\n      text: \"Ti sto reindirizzando alle Promozioni Linea Fissa...\",\n      action: () => navigate(\"/promozioniLineaFissa\"),\n      options: []\n    },\n    3: {\n      text: \"Ti sto reindirizzando alla sezione Telefoni...\",\n      action: () => navigate(\"/telefoni\"),\n      options: []\n    },\n    default: {\n      text: \"Non ho capito la tua richiesta. Seleziona un'opzione:\",\n      options: [\"1. Promozioni\", \"2. Promozioni Linea Fissa\", \"3. Telefoni\"]\n    }\n  };\n  useEffect(() => {\n    // Messaggio iniziale\n    setMessages([chatResponses.initial]);\n    setCurrentOptions(chatResponses.initial.options);\n  }, []);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, showChat]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  const handleSend = () => {\n    if (!inputValue.trim()) return;\n\n    // Aggiungi messaggio utente\n    const userMessage = {\n      text: inputValue,\n      isUser: true\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInputValue(\"\");\n\n    // Simula ritardo risposta bot\n    setTimeout(() => {\n      let response = chatResponses[inputValue] || chatResponses.default;\n      setMessages(prev => [...prev, {\n        text: response.text,\n        isUser: false,\n        options: response.options\n      }]);\n      setCurrentOptions(response.options || []);\n\n      // Esegui l'azione di navigazione se presente\n      if (response.action) {\n        setTimeout(() => {\n          response.action();\n          setShowChat(false); // Chiudi la chat dopo la navigazione\n        }, 1500);\n      }\n    }, 500);\n  };\n  const handleOptionSelect = option => {\n    const number = option.split(\".\")[0].trim();\n    setInputValue(number);\n    handleSend();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      ref: target,\n      variant: \"warning\",\n      onClick: () => setShowChat(!showChat),\n      style: {\n        position: \"fixed\",\n        bottom: \"20px\",\n        right: \"20px\",\n        borderRadius: \"50%\",\n        width: \"60px\",\n        height: \"60px\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        zIndex: 1000\n      },\n      children: showChat ? /*#__PURE__*/_jsxDEV(FaTimes, {\n        size: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(FaComment, {\n        size: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 45\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Overlay, {\n      show: showChat,\n      target: target.current,\n      placement: \"top-end\",\n      container: document.body,\n      rootClose: true,\n      onHide: () => setShowChat(false),\n      children: /*#__PURE__*/_jsxDEV(Popover, {\n        id: \"chat-popover\",\n        style: {\n          width: \"350px\",\n          maxWidth: \"350px\",\n          height: \"500px\",\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Popover.Header, {\n          as: \"h3\",\n          className: \"d-flex justify-content-between align-items-center\",\n          children: [\"Assistenza Clienti\", /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"link\",\n            onClick: () => setShowChat(false),\n            style: {\n              padding: 0\n            },\n            children: /*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Popover.Body, {\n          style: {\n            flex: 1,\n            overflowY: \"auto\",\n            padding: \"10px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-messages\",\n            children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `mb-2 ${msg.isUser ? \"text-end\" : \"text-start\"}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `d-inline-block p-2 rounded ${msg.isUser ? \"bg-primary text-white\" : \"bg-light\"}`,\n                style: {\n                  maxWidth: \"80%\"\n                },\n                children: msg.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 19\n              }, this), msg.options && !msg.isUser && /*#__PURE__*/_jsxDEV(ListGroup, {\n                className: \"mt-2\",\n                children: msg.options.map((opt, i) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                  action: true,\n                  onClick: () => handleOptionSelect(opt),\n                  className: \"option-item\",\n                  children: opt\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: messagesEndRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-2 border-top\",\n          children: /*#__PURE__*/_jsxDEV(InputGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              value: inputValue,\n              onChange: e => setInputValue(e.target.value),\n              placeholder: \"Scrivi il numero dell'opzione...\",\n              onKeyPress: e => e.key === \"Enter\" && handleSend()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: handleSend,\n              children: /*#__PURE__*/_jsxDEV(FaPaperPlane, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ChatPopup, \"cELoymLF+lkC+yYvg1jCn3cXeJw=\", false, function () {\n  return [useNavigate];\n});\n_c = ChatPopup;\nexport default ChatPopup;\nvar _c;\n$RefreshReg$(_c, \"ChatPopup\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Button","ListGroup","Form","InputGroup","Overlay","Popover","FaComment","FaTimes","FaPaperPlane","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatPopup","_s","navigate","showChat","setShowChat","messages","setMessages","inputValue","setInputValue","currentOptions","setCurrentOptions","target","messagesEndRef","chatResponses","initial","text","options","action","default","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSend","trim","userMessage","isUser","prev","setTimeout","response","handleOptionSelect","option","number","split","children","ref","variant","onClick","style","position","bottom","right","borderRadius","width","height","display","alignItems","justifyContent","zIndex","size","fileName","_jsxFileName","lineNumber","columnNumber","show","placement","container","document","body","rootClose","onHide","id","maxWidth","flexDirection","Header","as","className","padding","Body","flex","overflowY","map","msg","index","opt","i","Item","Control","value","onChange","e","placeholder","onKeyPress","key","_c","$RefreshReg$"],"sources":["C:/Users/l-gab/OneDrive/Desktop/EPICODE/Capstone/flysym_fe/src/Component/ChatBot.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Button, ListGroup, Form, InputGroup, Overlay, Popover } from \"react-bootstrap\";\r\nimport { FaComment, FaTimes, FaPaperPlane } from \"react-icons/fa\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst ChatPopup = () => {\r\n  const navigate = useNavigate();\r\n  const [showChat, setShowChat] = useState(false);\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [currentOptions, setCurrentOptions] = useState([]);\r\n  const target = useRef(null);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  // Database delle risposte con navigazione\r\n  const chatResponses = {\r\n    initial: {\r\n      text: \"Ciao! Sono il tuo assistente virtuale. Seleziona un'opzione e verrai reindirizzato alla pagina richiesta:\",\r\n      options: [\"1. Promozioni\", \"2. Promozioni Linea Fissa\", \"3. Telefoni\"],\r\n    },\r\n    1: {\r\n      text: \"Ti sto reindirizzando alle Promozioni...\",\r\n      action: () => navigate(\"/promozioni\"),\r\n      options: [],\r\n    },\r\n    2: {\r\n      text: \"Ti sto reindirizzando alle Promozioni Linea Fissa...\",\r\n      action: () => navigate(\"/promozioniLineaFissa\"),\r\n      options: [],\r\n    },\r\n    3: {\r\n      text: \"Ti sto reindirizzando alla sezione Telefoni...\",\r\n      action: () => navigate(\"/telefoni\"),\r\n      options: [],\r\n    },\r\n    default: {\r\n      text: \"Non ho capito la tua richiesta. Seleziona un'opzione:\",\r\n      options: [\"1. Promozioni\", \"2. Promozioni Linea Fissa\", \"3. Telefoni\"],\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Messaggio iniziale\r\n    setMessages([chatResponses.initial]);\r\n    setCurrentOptions(chatResponses.initial.options);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages, showChat]);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  const handleSend = () => {\r\n    if (!inputValue.trim()) return;\r\n\r\n    // Aggiungi messaggio utente\r\n    const userMessage = { text: inputValue, isUser: true };\r\n    setMessages((prev) => [...prev, userMessage]);\r\n    setInputValue(\"\");\r\n\r\n    // Simula ritardo risposta bot\r\n    setTimeout(() => {\r\n      let response = chatResponses[inputValue] || chatResponses.default;\r\n\r\n      setMessages((prev) => [\r\n        ...prev,\r\n        {\r\n          text: response.text,\r\n          isUser: false,\r\n          options: response.options,\r\n        },\r\n      ]);\r\n      setCurrentOptions(response.options || []);\r\n\r\n      // Esegui l'azione di navigazione se presente\r\n      if (response.action) {\r\n        setTimeout(() => {\r\n          response.action();\r\n          setShowChat(false); // Chiudi la chat dopo la navigazione\r\n        }, 1500);\r\n      }\r\n    }, 500);\r\n  };\r\n\r\n  const handleOptionSelect = (option) => {\r\n    const number = option.split(\".\")[0].trim();\r\n    setInputValue(number);\r\n    handleSend();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Pulsante chat fisso */}\r\n      <Button\r\n        ref={target}\r\n        variant=\"warning\"\r\n        onClick={() => setShowChat(!showChat)}\r\n        style={{\r\n          position: \"fixed\",\r\n          bottom: \"20px\",\r\n          right: \"20px\",\r\n          borderRadius: \"50%\",\r\n          width: \"60px\",\r\n          height: \"60px\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          zIndex: 1000,\r\n        }}\r\n      >\r\n        {showChat ? <FaTimes size={20} /> : <FaComment size={20} />}\r\n      </Button>\r\n\r\n      {/* Popup della chat */}\r\n      <Overlay show={showChat} target={target.current} placement=\"top-end\" container={document.body} rootClose onHide={() => setShowChat(false)}>\r\n        <Popover\r\n          id=\"chat-popover\"\r\n          style={{\r\n            width: \"350px\",\r\n            maxWidth: \"350px\",\r\n            height: \"500px\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n          }}\r\n        >\r\n          <Popover.Header as=\"h3\" className=\"d-flex justify-content-between align-items-center\">\r\n            Assistenza Clienti\r\n            <Button variant=\"link\" onClick={() => setShowChat(false)} style={{ padding: 0 }}>\r\n              <FaTimes />\r\n            </Button>\r\n          </Popover.Header>\r\n          <Popover.Body style={{ flex: 1, overflowY: \"auto\", padding: \"10px\" }}>\r\n            <div className=\"chat-messages\">\r\n              {messages.map((msg, index) => (\r\n                <div key={index} className={`mb-2 ${msg.isUser ? \"text-end\" : \"text-start\"}`}>\r\n                  <div className={`d-inline-block p-2 rounded ${msg.isUser ? \"bg-primary text-white\" : \"bg-light\"}`} style={{ maxWidth: \"80%\" }}>\r\n                    {msg.text}\r\n                  </div>\r\n\r\n                  {msg.options && !msg.isUser && (\r\n                    <ListGroup className=\"mt-2\">\r\n                      {msg.options.map((opt, i) => (\r\n                        <ListGroup.Item key={i} action onClick={() => handleOptionSelect(opt)} className=\"option-item\">\r\n                          {opt}\r\n                        </ListGroup.Item>\r\n                      ))}\r\n                    </ListGroup>\r\n                  )}\r\n                </div>\r\n              ))}\r\n              <div ref={messagesEndRef} />\r\n            </div>\r\n          </Popover.Body>\r\n          <div className=\"p-2 border-top\">\r\n            <InputGroup>\r\n              <Form.Control\r\n                value={inputValue}\r\n                onChange={(e) => setInputValue(e.target.value)}\r\n                placeholder=\"Scrivi il numero dell'opzione...\"\r\n                onKeyPress={(e) => e.key === \"Enter\" && handleSend()}\r\n              />\r\n              <Button variant=\"primary\" onClick={handleSend}>\r\n                <FaPaperPlane />\r\n              </Button>\r\n            </InputGroup>\r\n          </div>\r\n        </Popover>\r\n      </Overlay>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatPopup;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}