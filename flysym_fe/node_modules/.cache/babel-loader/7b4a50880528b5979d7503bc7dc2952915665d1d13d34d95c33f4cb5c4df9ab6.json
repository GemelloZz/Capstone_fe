{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\l-gab\\\\OneDrive\\\\Desktop\\\\EPICODE\\\\Capstone\\\\flysym_fe\\\\src\\\\Component\\\\AdminPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPage = () => {\n  _s();\n  const [promozioni, setPromozioni] = useState([]);\n  const [newPromozione, setNewPromozione] = useState(\"\");\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  // Funzione per verificare se l'utente è admin (usando il token JWT)\n  useEffect(() => {\n    const token = localStorage.getItem(\"authToken\");\n    if (token) {\n      console.log(\"Token trovato:\", token); // Debug: Visualizza il token\n      const decodedToken = JSON.parse(atob(token.split(\".\")[1])); // Decodifica il token\n      const roles = decodedToken.roles;\n      console.log(\"Ruoli utente:\", roles); // Debug: Visualizza i ruoli\n      setIsAdmin(roles.includes(\"ROLE_ADMIN\")); // Verifica se l'utente ha il ruolo di admin\n    }\n    setLoading(false);\n  }, []);\n\n  // Funzione per recuperare le promozioni\n  const fetchPromozioni = async () => {\n    try {\n      const token = localStorage.getItem(\"authToken\");\n      if (!token) {\n        console.error(\"Token non trovato!\");\n        return;\n      }\n      console.log(\"Invio richiesta con token:\", token); // Debug: Visualizza il token inviato\n      const response = await fetch(\"http://localhost:9090/api/admin/promozioni\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error(\"Errore nel recupero delle promozioni\");\n      }\n      const data = await response.json();\n      setPromozioni(data);\n      console.log(\"Promozioni recuperate:\", data); // Debug: Visualizza i dati ricevuti\n    } catch (error) {\n      console.error(\"Errore nel recupero delle promozioni:\", error);\n    }\n  };\n\n  // Funzione per aggiungere una nuova promozione\n  const addPromozione = async () => {\n    try {\n      const token = localStorage.getItem(\"authToken\");\n      if (!token) {\n        console.error(\"Token non trovato!\");\n        return;\n      }\n      console.log(\"Invio richiesta per aggiungere promozione con token:\", token); // Debug: Visualizza il token inviato\n      const response = await fetch(\"http://localhost:9090/api/admin/promozioni/add\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          promozione: newPromozione\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Errore nell'aggiungere la promozione\");\n      }\n      setNewPromozione(\"\");\n      fetchPromozioni();\n    } catch (error) {\n      console.error(\"Errore nell'aggiungere la promozione:\", error);\n    }\n  };\n\n  // Funzione per aggiornare una promozione\n  const updatePromozione = async id => {\n    const updatedPromozione = prompt(\"Nuovo nome della promozione:\");\n    if (updatedPromozione) {\n      try {\n        const token = localStorage.getItem(\"authToken\");\n        if (!token) {\n          console.error(\"Token non trovato!\");\n          return;\n        }\n        console.log(\"Invio richiesta per aggiornare promozione con token:\", token); // Debug: Visualizza il token inviato\n        const response = await fetch(`http://localhost:9090/api/admin/promozioni/update/${id}`, {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          },\n          body: JSON.stringify({\n            promozione: updatedPromozione\n          })\n        });\n        if (!response.ok) {\n          throw new Error(\"Errore nell'aggiornare la promozione\");\n        }\n        fetchPromozioni();\n      } catch (error) {\n        console.error(\"Errore nell'aggiornare la promozione:\", error);\n      }\n    }\n  };\n\n  // Funzione per eliminare una promozione\n  const deletePromozione = async id => {\n    const confirmDelete = window.confirm(\"Sei sicuro di voler eliminare questa promozione?\");\n    if (confirmDelete) {\n      try {\n        const token = localStorage.getItem(\"authToken\");\n        if (!token) {\n          console.error(\"Token non trovato!\");\n          return;\n        }\n        console.log(\"Invio richiesta per eliminare promozione con token:\", token); // Debug: Visualizza il token inviato\n        const response = await fetch(`http://localhost:9090/api/admin/promozioni/delete/${id}`, {\n          method: \"DELETE\",\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error(\"Errore nell'eliminare la promozione\");\n        }\n        fetchPromozioni();\n      } catch (error) {\n        console.error(\"Errore nell'eliminare la promozione:\", error);\n      }\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isAdmin ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Gestione Promozioni\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newPromozione,\n          onChange: e => setNewPromozione(e.target.value),\n          placeholder: \"Nuova promozione\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addPromozione,\n          children: \"Aggiungi Promozione\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: promozioni.map(promozione => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [promozione.name, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => updatePromozione(promozione.id),\n            children: \"Modifica\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deletePromozione(promozione.id),\n            children: \"Elimina\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this)]\n        }, promozione.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Accesso non autorizzato\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Solo gli amministratori possono gestire le promozioni.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPage, \"JUCS+Czieb2eu+bAm96h+HCdwsY=\");\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AdminPage","_s","promozioni","setPromozioni","newPromozione","setNewPromozione","isAdmin","setIsAdmin","loading","setLoading","token","localStorage","getItem","console","log","decodedToken","JSON","parse","atob","split","roles","includes","fetchPromozioni","error","response","fetch","method","headers","Authorization","ok","Error","data","json","addPromozione","body","stringify","promozione","updatePromozione","id","updatedPromozione","prompt","deletePromozione","confirmDelete","window","confirm","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","name","_c","$RefreshReg$"],"sources":["C:/Users/l-gab/OneDrive/Desktop/EPICODE/Capstone/flysym_fe/src/Component/AdminPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst AdminPage = () => {\r\n  const [promozioni, setPromozioni] = useState([]);\r\n  const [newPromozione, setNewPromozione] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Funzione per verificare se l'utente è admin (usando il token JWT)\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"authToken\");\r\n    if (token) {\r\n      console.log(\"Token trovato:\", token); // Debug: Visualizza il token\r\n      const decodedToken = JSON.parse(atob(token.split(\".\")[1])); // Decodifica il token\r\n      const roles = decodedToken.roles;\r\n      console.log(\"Ruoli utente:\", roles); // Debug: Visualizza i ruoli\r\n      setIsAdmin(roles.includes(\"ROLE_ADMIN\")); // Verifica se l'utente ha il ruolo di admin\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  // Funzione per recuperare le promozioni\r\n  const fetchPromozioni = async () => {\r\n    try {\r\n      const token = localStorage.getItem(\"authToken\");\r\n      if (!token) {\r\n        console.error(\"Token non trovato!\");\r\n        return;\r\n      }\r\n\r\n      console.log(\"Invio richiesta con token:\", token); // Debug: Visualizza il token inviato\r\n      const response = await fetch(\"http://localhost:9090/api/admin/promozioni\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Errore nel recupero delle promozioni\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      setPromozioni(data);\r\n      console.log(\"Promozioni recuperate:\", data); // Debug: Visualizza i dati ricevuti\r\n    } catch (error) {\r\n      console.error(\"Errore nel recupero delle promozioni:\", error);\r\n    }\r\n  };\r\n\r\n  // Funzione per aggiungere una nuova promozione\r\n  const addPromozione = async () => {\r\n    try {\r\n      const token = localStorage.getItem(\"authToken\");\r\n      if (!token) {\r\n        console.error(\"Token non trovato!\");\r\n        return;\r\n      }\r\n\r\n      console.log(\"Invio richiesta per aggiungere promozione con token:\", token); // Debug: Visualizza il token inviato\r\n      const response = await fetch(\"http://localhost:9090/api/admin/promozioni/add\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({ promozione: newPromozione }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Errore nell'aggiungere la promozione\");\r\n      }\r\n\r\n      setNewPromozione(\"\");\r\n      fetchPromozioni();\r\n    } catch (error) {\r\n      console.error(\"Errore nell'aggiungere la promozione:\", error);\r\n    }\r\n  };\r\n\r\n  // Funzione per aggiornare una promozione\r\n  const updatePromozione = async (id) => {\r\n    const updatedPromozione = prompt(\"Nuovo nome della promozione:\");\r\n    if (updatedPromozione) {\r\n      try {\r\n        const token = localStorage.getItem(\"authToken\");\r\n        if (!token) {\r\n          console.error(\"Token non trovato!\");\r\n          return;\r\n        }\r\n\r\n        console.log(\"Invio richiesta per aggiornare promozione con token:\", token); // Debug: Visualizza il token inviato\r\n        const response = await fetch(`http://localhost:9090/api/admin/promozioni/update/${id}`, {\r\n          method: \"PUT\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          body: JSON.stringify({ promozione: updatedPromozione }),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"Errore nell'aggiornare la promozione\");\r\n        }\r\n\r\n        fetchPromozioni();\r\n      } catch (error) {\r\n        console.error(\"Errore nell'aggiornare la promozione:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Funzione per eliminare una promozione\r\n  const deletePromozione = async (id) => {\r\n    const confirmDelete = window.confirm(\"Sei sicuro di voler eliminare questa promozione?\");\r\n    if (confirmDelete) {\r\n      try {\r\n        const token = localStorage.getItem(\"authToken\");\r\n        if (!token) {\r\n          console.error(\"Token non trovato!\");\r\n          return;\r\n        }\r\n\r\n        console.log(\"Invio richiesta per eliminare promozione con token:\", token); // Debug: Visualizza il token inviato\r\n        const response = await fetch(`http://localhost:9090/api/admin/promozioni/delete/${id}`, {\r\n          method: \"DELETE\",\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"Errore nell'eliminare la promozione\");\r\n        }\r\n\r\n        fetchPromozioni();\r\n      } catch (error) {\r\n        console.error(\"Errore nell'eliminare la promozione:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n\r\n  return (\r\n    <div>\r\n      {isAdmin ? (\r\n        <div>\r\n          <h2>Gestione Promozioni</h2>\r\n\r\n          {/* Aggiungi Promozione */}\r\n          <div>\r\n            <input type=\"text\" value={newPromozione} onChange={(e) => setNewPromozione(e.target.value)} placeholder=\"Nuova promozione\" />\r\n            <button onClick={addPromozione}>Aggiungi Promozione</button>\r\n          </div>\r\n\r\n          {/* Visualizza tutte le promozioni */}\r\n          <ul>\r\n            {promozioni.map((promozione) => (\r\n              <li key={promozione.id}>\r\n                {promozione.name}\r\n                <button onClick={() => updatePromozione(promozione.id)}>Modifica</button>\r\n                <button onClick={() => deletePromozione(promozione.id)}>Elimina</button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <h2>Accesso non autorizzato</h2>\r\n          <p>Solo gli amministratori possono gestire le promozioni.</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}